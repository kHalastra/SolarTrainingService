definitions:
  main.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all books from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the database
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a book from the database by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Book deleted successfully
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete a book by ID
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Retrieve a specific book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update the details of an existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "200":
          description: Book updated successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update a book by ID
      tags:
      - books
swagger: "2.0"
